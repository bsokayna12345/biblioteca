/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package clases;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;  // Import the File class
import java.io.FileNotFoundException;  // Import this class to handle errors
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner; 


public class Main {
    
    public static void main (String [] args) {
  
    	ArrayList<Libro> catalogo = new ArrayList<Libro>();
    	
    	while(true) {
    		int opcion = menu();
    		switch (opcion) {
			case 1:
				//TODO Alta de Libro
				//titulo:isbn:genero:autor:paginas
				alta(catalogo);
				break;
			case 2:
				//TODO Lista de Libros
				listLibros(catalogo);
				break;
			case 3:
				bajaLibros(catalogo); 
				break;
			case 4:
				buscarLibros(catalogo);
				break;
			case 5:
				ordenacionLibros(catalogo);
				break;
			case 6:
				creatFichero(catalogo);
				break;
			case 7:
				cargaFichero(catalogo);
				break;
			default:
				break;
			}
    	}
    }
    
    private static int menu() {
    	int opcion=0;
    	
    	do {
    		System.out.println("Opciones:");
    		System.out.println("1. Alta de Libro");
    		System.out.println("2. Lista de Libros");
    		System.out.println("3. Baja de Libros");
    		System.out.println("4. B√∫squeda de Libros");
    		System.out.println("5. Ordenacion de Libros");
    		System.out.println("6. Crear fichero:");
    		System.out.println("7. Cargar fichero:");
    	
    		opcion = leerOpcion(8);
    		
    	}while(opcion <=0);
    	
    	return opcion;
    }
    
    private static int leerOpcion(int max) {
    	int opcion = -1;
    	try {
    		Scanner teclado = new Scanner(System.in);
    		opcion=teclado.nextInt();
    		if(opcion>max)
    			opcion=-1;
    	}catch (InputMismatchException e) {
			System.out.println("Opci√≥n incorrecta");
		}
    	
    	return opcion;
    }
    
    private static void alta(ArrayList<Libro> catalogo) {
    	//Leer de la entrada
    	String datosLibro = obtenerDatosLibro();
    	//titulo:isbn:genero:autor:paginas
    	//Procesar la entrada
    	Libro libro = procesaEntrada(datosLibro);
    	//Crear el libro con los datos de la entrada
    	catalogo.add(libro);
    	//Meter el libro en el catalogo
    	
    	
    }
    
    private static String obtenerDatosLibro() {
    	String datos=null;
    	
    	boolean validado=false;
    	while(!validado) {
    		System.out.println("Introduce los datos de un libro.");
    		System.out.println("Usa el formato \"titulo:isbn:genero:autor:paginas\"");
    		try {
    			datos = leerCadena();
    			if(true)//Supongo de momento que valida siempre
    				validado=true;
    		}catch (InputMismatchException e) {
				System.out.println("Datos de entrada no v√°lidos");
			}
    	}
    	
    	return datos;
    }
   
	
	
    
    private static Libro procesaEntrada(String entrada) {
    	Libro libro = null;
    	
    	String [] datos = entrada.split(":");
    	
    	String titulo = datos[0];
    	String isbn = datos[1];
    	Genero genero = Genero.getGenero(datos[2]);
    	String autor = datos[3];
    	Integer paginas = Integer.parseInt(datos[4]);
    
    	 libro=new Libro(titulo,isbn,genero,autor,paginas);
    	    	 
    	return libro;
    }
    
    private static String leerCadena() {
    	String opcion = null;
    	Scanner teclado = new Scanner(System.in);
        opcion=teclado.nextLine();
    	return opcion;
    }
    private static void listLibros(ArrayList<Libro> catalogo) {
    	// mostrar los elementos del array 
    	
    	
    //hsdfs:23hd:novela:hsdh:1424
    	
//    	
     	int NumLibro=1;
    	for (Libro l: catalogo) {
    		System.out.println("libro" +NumLibro++);
   		    System.out.println(l);
    	}
    }
     public static  void  bajaLibros(ArrayList<Libro> catalogo) {
    	 Scanner sc= new Scanner(System.in);
    	  System.out.println(" introduce el numero delibro que quieres eliminar ");
    	  int NumEliminar = sc.nextInt();
    	  System.out.println(catalogo.remove(NumEliminar-1));
     
    }
    private static void buscarLibros(ArrayList<Libro> catalogo ) {
    	Scanner sc =new Scanner(System.in);
    
    	System.out.println(" introduce isbn del libro");
   	    String buscar= sc.next();
        Libro l = new Libro();
        l.setIsbn(buscar);
        // buscar posicion indexOf devuelve el posicion de (l)
        
    	int indice = catalogo.indexOf(l);
    	if (indice != -1) {
    		System.out.println("El isbn est· en el Ìndice " + indice);
    		System.out.println(catalogo.get(indice));
		
    	}
   	}
    private static void ordenacionLibros(ArrayList<Libro> catalogo) {
    	
    	 
    // Ordenamos la lista.
    
    Scanner sc=new Scanner( System.in);
    System.out.println(" que ordenacion preferes  se por titulo puse 1, por paginas puse 2 ");
    int a= sc.nextInt();
    switch(a) {
    case 1:
    	Collections.sort(catalogo); 
		break;
	case 2:
		Collections.sort(catalogo, new Libro()); 
		break;
	default:
		break;
    
    }
   
    }
    /*
    private static void fichero(String Libro) {
//	File file =new File("C:\\Users\\usuario\\Desktop\\CarpetaExamenED\\Catalodo");
//    if (! file.exists()) {
//    	try {
//    		file.createNewFile();
//    		System.out.println(file.getName()+" ha sido creado");
//    	}catch(IOException ex) { ex.printStackTrace();}
//    }
		Scanner sc=new Scanner( System.in);
		System.out.println( " Introduce el nombre del fichero ");
		String nombreFichero = sc.next();
      try {
       FileWriter fichero = new FileWriter("nombreFichero.txt");
       fichero.write(Libro);
       fichero.close();
       System.out.println("fichero creado."+ nombreFichero);
    }  catch (IOException e) {
       System.out.println("An error occurred.");
	    e.printStackTrace();
	    
	  }*/
	
    public static void creatFichero(ArrayList<Libro> catalogo) {
    	Scanner sc=new Scanner( System.in);
		System.out.println( " Introduce el nombre del fichero ");
		String nombreFichero = sc.next();
      try {
        
    	  FileWriter fichero = new FileWriter(nombreFichero + ".txt");
    	  BufferedWriter file =new BufferedWriter(fichero);
    	  for(Libro l : catalogo) {
    		  String linea = "Libro"+l.getTitulo() + " / "+l.getIsbn()+" / "+l.getAutor()+ " / "+ l.getGenero() + "/ "+l.getPaginas();
    		  file.write(linea);
    		  file.newLine();
    		  System.out.println("el libro  " +l.getTitulo() +" esta en el fichero");
    	  }
    	  file.close();
    	  
      }  catch (IOException e) {
          System.out.println("An error occurred.");
   	    e.printStackTrace();
}
   }
    public static void cargaFichero( ArrayList<Libro> catalogo) {
    	Scanner sc=new Scanner( System.in);
    	try {
    		System.out.println("introduce el nombre del fichero ");
    		String nombreFichero=sc.nextLine();
    		FileReader fichero = new FileReader(nombreFichero+ " .txt");
    		BufferedReader file= new BufferedReader(fichero) ;
    		 String linea ;
    		 while ((linea= file.readLine())!=null) {
    			 Libro l = entradaCatalogo(linea);
    			 catalogo.add(l);
    			 
    		 }
    	}catch (IOException e) {
            System.out.println("An error occurred.");
       	    e.printStackTrace();
    }
    
    }

	private static Libro entradaCatalogo(String linea) {
		// TODO Auto-generated method stub
		return null;
	}

	

	
	}

	
	

